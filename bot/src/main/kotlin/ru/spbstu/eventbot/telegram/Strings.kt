package ru.spbstu.eventbot.telegram

import ru.spbstu.eventbot.domain.entities.*
import ru.spbstu.eventbot.domain.usecases.SubmitApplicationUseCase
import java.time.Instant
import java.time.ZoneId
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

object Strings {
    const val InvalidName = "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    const val InvalidEmail = "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ—á—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    const val InvalidGroup = "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–æ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É –í–®–ü–ò –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    const val RequestName = "–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è.\n–í–≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û "
    const val RequestEmail = "–¢–µ–ø–µ—Ä—å –Ω—É–∂–µ–Ω –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã."
    const val RequestGroup = "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã"
    const val RegistrationRetry = "–¢–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ"
    const val RequestYesNo = "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞ –∏–ª–∏ –Ω–µ—Ç"
    const val RegisteredSuccessfully = "–í—ã *—É—Å–ø–µ—à–Ω–æ* –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å—ã."

    const val RequestClientName = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏-–∑–∞–∫–∞–∑—á–∏–∫–∞"
    const val RequestClientEmail = "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∑–∞–∫–∞–∑—á–∏–∫–∞"
    const val RequestClientUserId = "–í–≤–µ–¥–∏—Ç–µ Id —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑–∞–∫–∞–∑—á–∏–∫–∞ (–Ω–∞–ø–∏—à–∏—Ç–µ \"–Ω–µ—Ç\", –µ—Å–ª–∏ –Ω–µ—Ç)"
    const val ClientRegisteredSuccessfully = "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑—á–∏–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
    const val InvalidClientName = "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û –∑–∞–∫–∞–∑—á–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    const val InvalidClientUserId = "Id –∑–∞–∫–∞–∑—á–∏–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."

    const val SelectClient = "–û—Ç –∫–æ–≥–æ?"
    const val RequestTitle = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞"
    const val RequestDescription = "–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –∫—É—Ä—Å–∞"
    const val RequestAdditionalQuestion = "–ï—Å–ª–∏ –ø–æ–º–∏–º–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –§–ò–û, –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π " +
            "–ø–æ—á—Ç—ã) —Ç—Ä–µ–±—É–µ—Ç—Å—è *–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*, —É–∫–∞–∂–∏—Ç–µ –µ—ë –≤ —Ñ–æ—Ä–º–µ –≤–æ–ø—Ä–æ—Å–∞.\n–ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ \"–Ω–µ—Ç\"."
    const val RequestExpiryDate = "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥—ç–¥–ª–∞–π–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫—É—Ä—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ *–¥–¥.–ú–ú.–≥–≥–≥–≥ —á—á:–º–º*"
    const val InvalidDate = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n–¢—Ä–µ–±—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç *–¥–¥.–ú–ú.–≥–≥–≥–≥ —á—á:–º–º*"
    const val ErrorRetry = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ."
    const val CreatedNewCourseSuccessfully = "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –∫—É—Ä—Å.\n–¢–µ–ø–µ—Ä—å —Å—Ç—É–¥–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –∫—É—Ä—Å–∞ –∏ —Å–º–æ–≥—É—Ç –ø–æ–¥–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ –∑–∞—è–≤–∫—É."
    const val ConfirmGroupMatcher = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    const val ExpiredGroupMatcher = "–ò—Å—Ç—ë–∫"

    const val UnknownCommand = "–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
    const val UnauthorizedError = "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞, –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏."
    const val AvailableCoursesHeader = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã"
    const val NoSuchCourse = "–≠—Ç–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    const val NoSuchClient = "–≠—Ç–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    const val NoApplicants = "–ù–∏–∫—Ç–æ –µ—â—ë –Ω–µ –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å."
    const val SubmitApplication = "‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
    const val RevokeApplication = "‚ùå –û—Ç–æ–∑–≤–∞—Ç—å –∑–∞–ø–∏—Å—å"
    const val SubmitError = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É."
    const val RevokeError = "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–∑–≤–∞—Ç—å –∑–∞—è–≤–∫—É."

    const val HelpCommands = "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: \n"
    const val RegisterDescription = " /register - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –±–æ—Ç–µ\n"
    const val StartDescription = "/start -  –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞\n"
    const val CoursesDescription = "/courses - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤\n"
    const val NewClientDescription = "/newclient - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞(–ø–∞—Ä—Ç–Ω—ë—Ä–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–µ–≥–æ –∫—É—Ä—Å–∞)\n"
    const val GetApplicantsDescription = "/getapplicants - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø–æ–¥–∞–≤—à–∏—Ö –∑–∞—è–≤–∫—É –Ω–∞ –∫—É—Ä—Å\n"
    const val NewCourseDescription = "/newcourse - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞\n"

    val HelpStart = """
        *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!*
        
         –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –í–®–ü–ò, –Ω–µ —É—Ç—Ä—É–∂–¥–∞—è —Å–µ–±—è –≤–≤–æ–¥–æ–º –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–π —Ä–∞–∑. 
        
         –î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è (–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /register).
         
         –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫—É—Ä—Å–æ–≤, –∞ —Ç–∞–∫–∂–µ –º—ã –±—É–¥–µ–º –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–æ–≤—ã—Ö –∫—É—Ä—Å–∞—Ö, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è.
    """.trimIndent()

    const val AlreadyApplied = "–ó–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
    const val CourseExpired = "–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å –∏—Å—Ç–µ–∫–ª–æ"
    const val NotRegistered = "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /register"
    const val CourseNotFound = "–¢–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ—Ç"

    const val ButtonCourses = "–ö—É—Ä—Å—ã"
    const val ButtonRegister = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
    const val ButtonNewClient = "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑—á–∏–∫"
    const val ButtonNewCourse = "–ù–æ–≤—ã–π –∫—É—Ä—Å"

    val PositiveAnswers = setOf("–¥–∞", "–∞–≥–∞", "—É–≥—É", "–¥", "yes", "ye", "yeah", "y")
    val NegativeAnswers = setOf("no", "net", "n", "–Ω–µ—Ç", "–Ω–µ", "–Ω")

    private val dateTimeFormatter = DateTimeFormatter
        .ofLocalizedDateTime(FormatStyle.LONG)
        .withZone(ZoneId.systemDefault())

    fun courseExpiredNotification(course: Course) =
        """–°–±–æ—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –∫—É—Ä—Å "${course.title}" –∑–∞–≤–µ—Ä—à—ë–Ω"""

    fun notificationAboutNewCourse(course: Course) =
        """*–í–Ω–∏–º–∞–Ω–∏–µ!*
            |–û—Ç–∫—Ä—ã—Ç–∞ –∑–∞–ø–∏—Å—å –Ω–∞ –Ω–æ–≤—ã–π –∫—É—Ä—Å: ${course.title}
            |–ö—É—Ä—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è ${course.client.name}
            |–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: ${course.description}
            |–î—ç–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏: ${dateTimeFormatter.format(course.expiryDate)} 
            |
            |–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å *–∑–∞—è–≤–∫—É* –Ω–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å. –í–∞—à–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ –º–Ω–µ–Ω–∏—é –∞–≤—Ç–æ—Ä–∞ –∫—É—Ä—Å–∞.
            |
            |–î–ª—è *–ø–æ–¥–∞—á–∏* –∑–∞—è–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ö—É—Ä—Å—ã¬ª, –≤—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª
            |
            |–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —ç—Ç–æ–º –∫—É—Ä—Å–µ, –≤—ã –º–æ–∂–µ—Ç–µ *–æ—Ç–æ–∑–≤–∞—Ç—å* –∑–∞—è–≤–∫—É.
            |–î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–û—Ç–æ–∑–≤–∞—Ç—å –∑–∞–ø–∏—Å—å¬ª
            """.trimMargin()

    fun registrationConfirmation(name: FullName, email: Email, group: Group) =
        """|–ò–º—è: $name
           |–ü–æ—á—Ç–∞: $email
           |–ì—Ä—É–ø–ø–∞: $group
           |–í–µ—Ä–Ω–æ?
        """.trimMargin()

    fun clientRegistrationConfirmation(name: ClientName, email: Email, userId: Long?) =
        """|–ò–º—è: $name
           |–ü–æ—á—Ç–∞: $email
           |id: ${userId ?: "–Ω–µ—Ç"}
           |–í–µ—Ä–Ω–æ?
        """.trimMargin()

    fun newCourseCreationConfirmation(title: CourseTitle, description: CourseDescription, additionalQuestion: String?, expiryDate: Instant, groupMatcher: Regex) =
        """|–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: $title
           |–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: $description
           |–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: ${additionalQuestion ?: "–Ω–µ—Ç"}
           |–î—ç–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏: ${dateTimeFormatter.format(expiryDate)}
           |Regex –≥—Ä—É–ø–ø: $groupMatcher
           |–í–µ—Ä–Ω–æ?
        """.trimMargin()

    fun courseDetails(course: Course) =
        """|*${course.title}* –æ—Ç _${course.client.name}_
           |
           |üïí –î–æ ${dateTimeFormatter.format(course.expiryDate)}
           |${course.description}
        """.trimMargin()

    fun requestAdditionalInfo(additionalQuestion: String)=
        """
            |–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–ø–∏—Å—å –Ω–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            |
            | $additionalQuestion
            | 
            |–£–∫–∞–∂–∏—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.          
        """.trimMargin()

    fun groupMatcher(regex: Regex) =
        """|–§–∏–ª—å—Ç—Ä –≥—Ä—É–ø–ø
           |–ü–æ–ª—É—á–∏–≤—à–∏–π—Å—è regex: $regex
        """.trimMargin()

    fun selectedButton(text: String) = "‚òëÔ∏èÔ∏è $text"

    fun studyYear(year: Year) = "${year.value} –∫—É—Ä—Å"

    fun <T> csvOf(
        headers: List<String>,
        data: List<T>,
        itemBuilder: (T) -> List<String>
    ) = buildString {
        append(headers.joinToString(",") { "\"$it\"" })
        append("\n")
        data.forEach { item ->
            append(itemBuilder(item).joinToString(",") { "\"$it\"" })
            append("\n")
        }
    }

    fun applicantsInfo(applications: List<Application>): String {
        val csv = csvOf(
            listOf("–§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞", "–ì—Ä—É–ø–ø–∞", "–ü–æ—á—Ç–∞", "–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
            applications
        ) {
            listOf(it.student.fullName.toString(), it.student.group.toString(), it.student.email.toString(), it.additionalInfo.toString())
        }
        return csv
    }
}
